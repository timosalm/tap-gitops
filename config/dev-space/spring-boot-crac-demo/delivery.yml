apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: spring-boot-crac-demo
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: spring-boot-crac-demo
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: spring-boot-crac-demo
spec:
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"spring-boot-crac-demo","apps.tanzu.vmware.com/workload-type":"web"},"name":"spring-boot-crac-demo","namespace":"dev-space"},"spec":{"params":[{"name":"dockerfile","value":"./Dockerfile"}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/tsalm-vmware/spring-boot-crac-demo.git"}}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: spring-boot-crac-demo
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: spring-boot-crac-demo
    spec:
      containers:
      - image: harbor.emea.end2end.link/tap/workloads/spring-boot-crac-demo-dev-space@sha256:91f2a6396182c6105e061f02d91fae0f523d9408df4648c327d0e96ac9ca79ce
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

